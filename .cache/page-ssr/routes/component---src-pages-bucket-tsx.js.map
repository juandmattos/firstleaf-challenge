{"version":3,"file":"component---src-pages-bucket-tsx.js","mappings":"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","sources":["webpack://firstleaf-challenge/./src/components/Countdown/index.module.scss","webpack://firstleaf-challenge/./src/components/TheBucket/index.module.scss","webpack://firstleaf-challenge/./src/components/Countdown/index.tsx","webpack://firstleaf-challenge/./src/components/TheBucket/index.tsx","webpack://firstleaf-challenge/./src/pages/bucket.tsx"],"sourcesContent":["// Exports\nexport var countdown = \"index-module--countdown--a2363\";\nexport var label = \"index-module--label--41e86\";\nexport var counter = \"index-module--counter--9f104\";\nexport var blink = \"index-module--blink--fbde3\";\nexport var blinker = \"index-module--blinker--9d8c8\";\nexport var timesUp = \"index-module--times-up--35605\";\n","// Exports\nexport var button = \"index-module--button--75c6f\";\n","import React, { useEffect, useState } from \"react\";\nimport * as styles from \"./index.module.scss\";\n\ntype CountdownProps = {\n  initialSeconds?: number;\n  label?: string;\n  loop?: boolean;\n  customClass?: string;\n  onFinish?: () => void;\n};\n\nconst Countdown = ({\n  initialSeconds = 1800,\n  label = \"Reserving your wines for\",\n  loop = false,\n  customClass = \"\",\n  onFinish = () => {},\n}: CountdownProps) => {\n  const [seconds, setSeconds] = useState(initialSeconds);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds((prevSeconds) => {\n        const end = loop ? initialSeconds : 0;\n        return prevSeconds > 0 ? prevSeconds - 1 : end;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [initialSeconds, loop]);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      onFinish();\n    }\n  }, [seconds, onFinish]);\n\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  const counter = `00:${`0${minutes}`.slice(-2)}:${`0${remainingSeconds}`.slice(\n    -2\n  )}`;\n\n  return (\n    <div className={`${styles.countdown} ${customClass}`}>\n      {label && (\n        <div className={`${styles.label} countdown-label`}>{label}</div>\n      )}\n      <div className={`${styles.counter} countdown-counter`}>{counter}</div>\n    </div>\n  );\n};\n\nexport default Countdown;\n","import React, { useState } from \"react\";\nimport * as styles from \"./index.module.scss\";\nimport Countdown from \"../Countdown\";\n\ntype BucketProps = {\n  batchSize: number;\n  onBatchFull: () => void;\n  disabled: boolean;\n};\n\nconst Bucket = ({ batchSize, onBatchFull, disabled }: BucketProps) => {\n  const [count, setCount] = useState<number>(0);\n\n  const updateCount = () => {\n    const newCount = count + 1;\n    const batchFull = newCount % batchSize === 0; // fix the \"4 is a batch\" issue\n    setCount(newCount);\n    if (batchFull) {\n      onBatchFull(); // remove unused argument\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={updateCount}\n      className={styles.button}\n      disabled={disabled}\n    >\n      {count} glasses poured\n    </button>\n  );\n};\n\nconst ThreeButtons = () => {\n  const [batchCount, setBatchCount] = useState<number>(0);\n  const [timeIsUp, setTimeIsUp] = useState<boolean>(false);\n\n  const handleFullBatch = () => {\n    setBatchCount((prevCount) => prevCount + 1); // Update a value properly\n  };\n\n  return (\n    <>\n      {timeIsUp && <h1>Total {batchCount}</h1>}\n      {!timeIsUp && !!batchCount && (\n        <Countdown\n          key={new Date().toISOString()}\n          initialSeconds={5}\n          label=\"\"\n          onFinish={() => setTimeIsUp(true)}\n        />\n      )}\n      <Bucket onBatchFull={handleFullBatch} batchSize={3} disabled={timeIsUp} />\n    </>\n  );\n};\n\nexport default ThreeButtons;\n","import React from \"react\";\nimport ThreeButtons from \"../components/TheBucket\";\n\nconst BucketPage = (): JSX.Element => (\n  <div>\n    <h1>Sample content</h1>\n\n    <ThreeButtons />\n  </div>\n);\n\nexport default BucketPage;\n"],"names":["React","useEffect","useState","styles","Countdown","initialSeconds","label","loop","customClass","onFinish","seconds","setSeconds","interval","setInterval","prevSeconds","end","clearInterval","minutes","Math","floor","remainingSeconds","counter","slice","createElement","className","countdown","Bucket","batchSize","onBatchFull","disabled","count","setCount","updateCount","newCount","batchFull","type","onClick","button","ThreeButtons","batchCount","setBatchCount","timeIsUp","setTimeIsUp","handleFullBatch","prevCount","Fragment","key","Date","toISOString","BucketPage"],"sourceRoot":""}